AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy Bedrock AI Streamlit App on AWS App Runner with ECR'

Parameters:
  AppName:
    Type: String
    Default: bedrock-ai-streamlit
    Description: Name for the application resources
  
  BedrockAgentId:
    Type: String
    Description: Bedrock Agent ID
    Default: HMASWS7VNA
  
  BedrockAgentAliasId:
    Type: String
    Description: Bedrock Agent Alias ID
    Default: S7KMPCYKQX
  
  AppTitle:
    Type: String
    Default: Welcome to BEDROCK Agent
    Description: Application title
  
  AppIcon:
    Type: String
    Default: ðŸ¤–
    Description: Application icon
  
  ECRImageURI:
    Type: String
    Description: ECR Image URI (format: account.dkr.ecr.region.amazonaws.com/repo:tag)
    Default: ""
  
  InstanceCpu:
    Type: String
    Default: 1 vCPU
    AllowedValues: [0.25 vCPU, 0.5 vCPU, 1 vCPU, 2 vCPU, 4 vCPU]
    Description: CPU allocation for App Runner service
  
  InstanceMemory:
    Type: String
    Default: 2 GB
    AllowedValues: [0.5 GB, 1 GB, 2 GB, 3 GB, 4 GB, 6 GB, 8 GB, 10 GB, 12 GB]
    Description: Memory allocation for App Runner service

Conditions:
  HasECRImageURI: !Not [!Equals [!Ref ECRImageURI, ""]]

Resources:
  # ECR Repository
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref AppName
      ImageScanningConfiguration:
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 10 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 10
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  # IAM Role for App Runner Instance (Bedrock access)
  AppRunnerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-instance-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: tasks.apprunner.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BedrockAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeAgent
                  - bedrock:InvokeModel
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

  # IAM Role for App Runner Access (ECR access)
  AppRunnerAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-access-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-09'
        Statement:
          - Effect: Allow
            Principal:
              Service: build.apprunner.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess

  # App Runner Service
  AppRunnerService:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName: !Sub "${AppName}-service"
      SourceConfiguration:
        ImageRepository:
          ImageIdentifier: !If
            - HasECRImageURI
            - !Ref ECRImageURI
            - !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}:latest"
          ImageConfiguration:
            Port: 8080
            RuntimeEnvironmentVariables:
              - Name: BEDROCK_AGENT_ID
                Value: !Ref BedrockAgentId
              - Name: BEDROCK_AGENT_ALIAS_ID
                Value: !Ref BedrockAgentAliasId
              - Name: AWS_DEFAULT_REGION
                Value: !Ref AWS::Region
              - Name: BEDROCK_AGENT_TEST_UI_TITLE
                Value: !Ref AppTitle
              - Name: BEDROCK_AGENT_TEST_UI_ICON
                Value: !Ref AppIcon
              - Name: LOG_LEVEL
                Value: INFO
          ImageRepositoryType: ECR
        AutoDeploymentsEnabled: false
        AccessRoleArn: !GetAtt AppRunnerAccessRole.Arn
      InstanceConfiguration:
        Cpu: !Ref InstanceCpu
        Memory: !Ref InstanceMemory
        InstanceRoleArn: !GetAtt AppRunnerInstanceRole.Arn
      HealthCheckConfiguration:
        Protocol: HTTP
        Path: /
        IntervalSeconds: 20
        TimeoutSeconds: 10
        HealthyThreshold: 3
        UnhealthyThreshold: 5
      AutoScalingConfigurationArn: !Ref AppRunnerAutoScalingConfig

  # Auto Scaling Configuration
  AppRunnerAutoScalingConfig:
    Type: AWS::AppRunner::AutoScalingConfiguration
    Properties:
      AutoScalingConfigurationName: !Sub "${AppName}-autoscaling"
      MaxConcurrency: 100
      MaxSize: 10
      MinSize: 1

  # CloudWatch Log Group
  AppRunnerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/apprunner/${AppName}-service/application"
      RetentionInDays: 14

Outputs:
  ECRRepositoryURI:
    Description: ECR Repository URI
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}"
    Export:
      Name: !Sub "${AWS::StackName}-ECRRepositoryURI"
  
  AppRunnerServiceURL:
    Description: App Runner Service URL
    Value: !Sub "https://${AppRunnerService.ServiceUrl}"
    Export:
      Name: !Sub "${AWS::StackName}-ServiceURL"
  
  AppRunnerServiceArn:
    Description: App Runner Service ARN
    Value: !Ref AppRunnerService
    Export:
      Name: !Sub "${AWS::StackName}-ServiceArn"
  
  InstanceRoleArn:
    Description: App Runner Instance Role ARN
    Value: !GetAtt AppRunnerInstanceRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-InstanceRoleArn"
  
  AccessRoleArn:
    Description: App Runner Access Role ARN
    Value: !GetAtt AppRunnerAccessRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-AccessRoleArn"